name: count_u8 CI
on: [push, pull_request]
jobs:
  compilers:
    name: CC=${{ matrix.cc }}, ${{ matrix.os }}
    strategy:
      fail-fast: false  # 'false' means Don't stop matrix workflows even if some matrix failed.
      matrix:
        include: [
          # You can access the following values via ${{ matrix.??? }}
          #
          #   pkgs    : apt-get package names.  It can include multiple package names which are delimited by space.
          #   cc      : C compiler.
          #   cxx     : C++ compiler.
          #   os      : GitHub Actions YAML workflow label.  See https://github.com/actions/virtual-environments#available-environments

          # cc
          { pkgs: '',                   cc: cc,        cxx: c++,         os: ubuntu-latest, },

          # gcc
          { pkgs: '',                   cc: gcc,       cxx: g++,         os: ubuntu-latest, },
          { pkgs: 'gcc-11 g++-11',      cc: gcc-11,    cxx: g++-11,      os: ubuntu-20.04,  },
          { pkgs: 'gcc-10',             cc: gcc-10,    cxx: g++-10,      os: ubuntu-20.04,  },
          { pkgs: 'gcc-9',              cc: gcc-9,     cxx: g++-9,       os: ubuntu-20.04,  },
          { pkgs: 'gcc-8 g++-8',        cc: gcc-8,     cxx: g++-8,       os: ubuntu-20.04,  },
          { pkgs: 'gcc-7 g++-7',        cc: gcc-7,     cxx: g++-7,       os: ubuntu-20.04,  },
          { pkgs: 'gcc-6 g++-6',        cc: gcc-6,     cxx: g++-6,       os: ubuntu-18.04,  },
          { pkgs: 'gcc-5 g++-5',        cc: gcc-5,     cxx: g++-5,       os: ubuntu-18.04,  },
          { pkgs: 'gcc-4.8 g++-4.8',    cc: gcc-4.8,   cxx: g++-4.8,     os: ubuntu-18.04,  },

          # clang
          { pkgs: '',                   cc: clang,     cxx: clang++,     os: ubuntu-latest, },
          { pkgs: 'clang-12',           cc: clang-12,  cxx: clang++-12,  os: ubuntu-20.04,  },
          { pkgs: 'clang-11',           cc: clang-11,  cxx: clang++-11,  os: ubuntu-20.04,  },
          { pkgs: 'clang-10',           cc: clang-10,  cxx: clang++-10,  os: ubuntu-20.04,  },
          { pkgs: 'clang-9',            cc: clang-9,   cxx: clang++-9,   os: ubuntu-20.04,  },
          { pkgs: 'clang-8',            cc: clang-8,   cxx: clang++-8,   os: ubuntu-20.04,  },
          { pkgs: 'clang-7',            cc: clang-7,   cxx: clang++-7,   os: ubuntu-20.04,  },
          { pkgs: 'clang-6.0',          cc: clang-6.0, cxx: clang++-6.0, os: ubuntu-20.04,  },
          { pkgs: 'clang-5.0',          cc: clang-5.0, cxx: clang++-5.0, os: ubuntu-18.04,  },
          { pkgs: 'clang-4.0',          cc: clang-4.0, cxx: clang++-4.0, os: ubuntu-18.04,  },
          { pkgs: 'clang-3.9',          cc: clang-3.9, cxx: clang++-3.9, os: ubuntu-18.04,  },
        ]

    runs-on: ${{ matrix.os }}
    env:
      CC: ${{ matrix.cc }}
      CXX: ${{ matrix.cxx }}
    steps:
    - uses: actions/checkout@v2 # https://github.com/actions/checkout

    - name: apt-get install
      run: |
        sudo apt-get update
        sudo apt-get install ${{ matrix.pkgs }}

    - name: Environment info
      run: |
        echo && type $CC && which $CC && $CC --version
        echo && type $CXX && which $CXX && $CXX --version

    - name: make
      if: always()
      run: V=1 make
